<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MaisonDesLigues</name>
    </assembly>
    <members>
        <member name="M:BaseDeDonnees.Bdd.#ctor(System.String,System.String)">
            <summary>
            constructeur de la connexion
            </summary>
            <param name="UnLogin">login utilisateur</param>
            <param name="UnPwd">mot de passe utilisateur</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.FermerConnexion">
            <summary>
            Méthode permettant de fermer la connexion
            </summary>
        </member>
        <member name="M:BaseDeDonnees.Bdd.GetMessageOracle(System.String)">
            <summary>
            méthode permettant de renvoyer un message d'erreur provenant de la bd
            après l'avoir formatté. On ne renvoie que le message, sans code erreur
            </summary>
            <param name="unMessage">message à formater</param>
            <returns>message formaté à afficher dans l'application</returns>
        </member>
        <member name="M:BaseDeDonnees.Bdd.ObtenirDonnesOracle(System.String)">
            <summary>
            permet de récupérer le contenu d'une table ou d'une vue. 
            </summary>
            <param name="UneTableOuVue"> nom de la table ou la vue dont on veut récupérer le contenu</param>
            <returns>un objet de type datatable contenant les données récupérées</returns>
        </member>
        <member name="M:BaseDeDonnees.Bdd.ParamCommunsNouveauxParticipants(Oracle.ManagedDataAccess.Client.OracleCommand,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            méthode privée permettant de valoriser les paramètres d'un objet commmand communs aux licenciés, bénévoles et intervenants
            </summary>
            <param name="Cmd">nom de l'objet command concerné par les paramètres</param>
            <param name="pNom">nom du participant</param>
            <param name="pPrenom">prénom du participant</param>
            <param name="pAdresse1">adresse1 du participant</param>
            <param name="pAdresse2">adresse2 du participant</param>
            <param name="pCp">cp du participant</param>
            <param name="pVille">ville du participant</param>
            <param name="pTel">téléphone du participant</param>
            <param name="pMail">mail du participant</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.InscrireBenevole(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.Int64},System.Collections.ObjectModel.Collection{System.Int16})">
            <summary>
            procédure qui va se charger d'invoquer la procédure stockée qui ira inscrire un participant de type bénévole
            </summary>
            <param name="pNom">nom du participant</param>
            <param name="pPrenom">prénom du participant</param>
            <param name="pAdresse1">adresse1 du participant</param>
            <param name="pAdresse2">adresse2 du participant</param>
            <param name="pCp">cp du participant</param>
            <param name="pVille">ville du participant</param>
            <param name="pTel">téléphone du participant</param>
            <param name="pMail">mail du participant</param>
            <param name="pDateNaissance">mail du bénévole</param>
            <param name="pNumeroLicence">numéro de licence du bénévole ou null</param>
            <param name="pDateBenevolat">collection des id des dates où le bénévole sera présent</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.ParamsSpecifiquesIntervenant(Oracle.ManagedDataAccess.Client.OracleCommand,System.Int16,System.String)">
            <summary>
            méthode privée permettant de valoriser les paramètres d'un objet commmand spécifiques intervenants
            </summary>
            <param name="Cmd"> nom de l'objet command concerné par les paramètres</param>
            <param name="pIdAtelier"> Id de l'atelier où interviendra l'intervenant</param>
            <param name="pIdStatut">statut de l'intervenant pour l'atelier : animateur ou intervenant</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.InscrireIntervenant(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int16,System.String)">
            <summary>
            Procédure publique qui va appeler la procédure stockée permettant d'inscrire un nouvel intervenant sans nuité
            </summary>
            <param name="pNom">nom du participant</param>
            <param name="pPrenom">prénom du participant</param>
            <param name="pAdresse1">adresse1 du participant</param>
            <param name="pAdresse2">adresse2 du participant</param>
            <param name="pCp">cp du participant</param>
            <param name="pVille">ville du participant</param>
            <param name="pTel">téléphone du participant</param>
            <param name="pMail">mail du participant</param>
            <param name="pIdAtelier"> Id de l'atelier où interviendra l'intervenant</param>
            <param name="pIdStatut">statut de l'intervenant pour l'atelier : animateur ou intervenant</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.InscrireIntervenant(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int16,System.String,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.Int16})">
            <summary>
            Procédure publique qui va appeler la procédure stockée permettant d'inscrire un nouvel intervenant qui aura des nuités
            </summary>
            <param name="pNom">nom du participant</param>
            <param name="pPrenom">prénom du participant</param>
            <param name="pAdresse1">adresse1 du participant</param>
            <param name="pAdresse2">adresse2 du participant</param>
            <param name="pCp">cp du participant</param>
            <param name="pVille">ville du participant</param>
            <param name="pTel">téléphone du participant</param>
            <param name="pMail">mail du participant</param>
            <param name="pIdAtelier"> Id de l'atelier où interviendra l'intervenant</param>
            <param name="pIdStatut">statut de l'intervenant pour l'atelier : animateur ou intervenant</param>
            <param name="pLesCategories">tableau contenant la catégorie de chambre pour chaque nuité à réserver</param>
            <param name="pLesHotels">tableau contenant l'hôtel pour chaque nuité à réserver</param>
            <param name="pLesNuits">tableau contenant l'id de la date d'arrivée pour chaque nuité à réserver</param>
        </member>
        <member name="M:BaseDeDonnees.Bdd.ObtenirDatesNuites">
            <summary>
            fonction permettant de construire un dictionnaire dont l'id est l'id d'une nuité et le contenu une date
            sous la la forme : lundi 7 janvier 2013        /// 
            </summary>
            <returns>un dictionnaire dont l'id est l'id d'une nuité et le contenu une date</returns>
        </member>
        <member name="M:MaisonDesLigues.Utilitaire.AffecterControle(System.Windows.Forms.Form,System.Windows.Forms.ScrollableControl,System.Windows.Forms.ButtonBase,System.String,System.Data.DataRow,System.Int16,System.Action{System.Object,System.EventArgs})">
            <summary>
            Cette méthode permet de renseigner les propriétés des contrôles à créer. C'est une partie commune aux 
            3 types de participants : intervenant, licencié, bénévole
            </summary>
            <param name="UneForme">le formulaire concerné</param>  
            <param name="UnContainer">le panel ou le groupbox dans lequel on va placer les controles</param> 
            <param name="UnControleAPlacer"> le controle en cours de création</param>
            <param name="UnPrefixe">les noms des controles sont standard : NomControle_XX
                                                    ou XX estl'id de l'enregistrement récupéré dans la vue qui
                                                    sert de siurce de données</param> 
            <param name="UneLigne">un enregistrement de la vue, celle pour laquelle on crée le contrôle</param> 
            <param name="i"> Un compteur qui sert à positionner en hauteur le controle</param>   
            <param name="callback"> Le pointeur de fonction. En fait le pointeur sur la fonction qui réagira à l'événement déclencheur </param>
        </member>
        <member name="M:MaisonDesLigues.Utilitaire.CreerCombo(System.Windows.Forms.ScrollableControl,System.String,System.Int16,System.Int16)">
            <summary>
            Créé une combobox dans un container avec le nom passé en paramètre
            </summary>
            <param name="UnContainer">panel ou groupbox</param> 
            <param name="unNom">nom de la groupbox à créer</param> 
            <param name="UnTop">positionnement haut dans le container  </param> 
            <param name="UnLeft">positionnement bas dans le container </param> 
        </member>
        <member name="M:MaisonDesLigues.Utilitaire.CreerDesControles(System.Windows.Forms.Form,BaseDeDonnees.Bdd,System.String,System.String,System.Windows.Forms.ScrollableControl,System.String,System.Action{System.Object,System.EventArgs})">
            <summary>
            Cette méthode crée des controles de type chckbox ou radio button dans un controle de type panel.
            Elle va chercher les données dans la base de données et crée autant de controles (les uns au dessous des autres
            qu'il y a de lignes renvoyées par la base de données.
            </summary>
            <param name="UneForme">Le formulaire concerné</param> 
            <param name="UneConnexion">L'objet connexion à utiliser pour la connexion à la BD</param> 
            <param name="pUneTable">Le nom de la source de données qui va fournir les données. Il s'agit en fait d'une vue de type
            VXXXXOn ou XXXX représente le nom de la tabl à partir de laquelle la vue est créée. n représente un numéro de séquence</param>  
            <param name="pPrefixe">les noms des controles sont standard : NomControle_XX
                                                    ou XX estl'id de l'enregistrement récupéré dans la vue qui
                                                    sert de source de données</param>
            <param name="UnPanel">panel ou groupbox dans lequel on va créer les controles</param>
            <param name="unTypeControle">type de controle à créer : checkbox ou radiobutton</param>
            <param name="callback"> Le pointeur de fonction. En fait le pointeur sur la fonction qui réagira à l'événement déclencheur </param>
        </member>
        <member name="M:MaisonDesLigues.Utilitaire.RemplirComboBox(BaseDeDonnees.Bdd,System.Windows.Forms.ComboBox,System.String)">
            <summary>
            méthode permettant de remplir une combobox à partir d'une source de données
            </summary>
            <param name="UneConnexion">L'objet connexion à utiliser pour la connexion à la BD</param>
            <param name="UneCombo"> La combobox que l'on doit remplir</param>
            <param name="UneSource">Le nom de la source de données qui va fournir les données. Il s'agit en fait d'une vue de type
            VXXXXOn ou XXXX représente le nom de la tabl à partir de laquelle la vue est créée. n représente un numéro de séquence</param>
        </member>
        <member name="M:MaisonDesLigues.Utilitaire.CompteChecked(System.Windows.Forms.ScrollableControl)">
            <summary>
            Cette fonction va compter le nombre de controles types CheckBox qui sont cochées contenus dans la collection controls
            du container passé en paramètre
            </summary>
            <param name="UnContainer"> le container sur lequel on va compter les controles de type checkbox qui sont checked</param>
            <returns>nombre  de checkbox cochées</returns>
        </member>
        <member name="T:MaisonDesLigues.FrmLogin">
            <summary>
            Formulaire d'accueil de l'application.
            Permet de saisir le login et le password de l'application et d'aller sur la page principale.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmLogin.#ctor">
            <summary>
            constructeur
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmLogin.CmdOk_Click(System.Object,System.EventArgs)">
            <summary>
            gestion événement click sur le bonton ok
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmLogin.ControleValide(System.Object,System.EventArgs)">
            <summary>
            gestion de l'activation/désactivation du bouton ok
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MaisonDesLigues.FrmLogin.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmLogin.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:MaisonDesLigues.FrmLogin.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:MaisonDesLigues.FrmPrincipale">
            <summary>
            Fenêtre principale de l'application 
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.#ctor">
            <summary>
            constructeur du formulaire
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.FrmPrincipale_Load(System.Object,System.EventArgs)">
            <summary>
            création et ouverture d'une connexion vers la base de données sur le chargement du formulaire
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.CmdQuitter_Click(System.Object,System.EventArgs)">
            <summary>
            gestion de l'événement click du bouton quitter.
            Demande de confirmation avant de quitetr l'application.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.GererInscriptionIntervenant">
            <summary>     
            procédure permettant d'afficher l'interface de saisie du complément d'inscription d'un intervenant.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.GererInscriptionBenevole">
            <summary>     
            procédure permettant d'afficher l'interface de saisie des disponibilités des bénévoles.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.rdbStatutIntervenant_StateChanged(System.Object,System.EventArgs)">
            <summary>
            permet d'appeler la méthode VerifBtnEnregistreIntervenant qui déterminera le statu du bouton BtnEnregistrerIntervenant
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.BtnEnregistreBenevole_Click(System.Object,System.EventArgs)">
            <summary>
            Permet d'intercepter le click sur le bouton d'enregistrement d'un bénévole.
            Cetteméthode va appeler la méthode InscrireBenevole de la Bdd, après avoir mis en forme certains paramètres à envoyer.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.ChkDateBenevole_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Cetet méthode teste les données saisies afin d'activer ou désactiver le bouton d'enregistrement d'un bénévole
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.RdbNuiteIntervenant_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Méthode qui permet d'afficher ou masquer le controle panel permettant la saisie des nuités d'un intervenant.
            S'il faut rendre visible le panel, on teste si les nuités possibles ont été chargés dans ce panel. Si non, on les charges 
            On charge ici autant de contrôles ResaNuit qu'il y a de nuits possibles
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.BtnEnregistrerIntervenant_Click(System.Object,System.EventArgs)">
            <summary>
            Cette procédure va appeler la procédure .... qui aura pour but d'enregistrer les éléments 
            de l'inscription d'un intervenant, avec éventuellment les nuités à prendre en compte        ///
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.VerifBtnEnregistreIntervenant">
            <summary>
            Méthode privée testant le contrôle combo et la variable IdStatutSelectionne qui contient une valeur
            Cette méthode permetra ensuite de définir l'état du bouton BtnEnregistrerIntervenant
            </summary>
            <returns></returns>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.CmbAtelierIntervenant_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Méthode permettant de définir le statut activé/désactivé du bouton BtnEnregistrerIntervenant
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MaisonDesLigues.FrmPrincipale.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MaisonDesLigues.FrmPrincipale.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MaisonDesLigues.Program.Main">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="T:MaisonDesLigues.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:MaisonDesLigues.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:MaisonDesLigues.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
    </members>
</doc>
